const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const db = require('./db');

const app = express();
const PORT = 3001;

app.use(cors());
app.use(bodyParser.json());

// Root route
app.get('/', (req, res) => {
    res.send('✅ Chess Club Backend is running!');
});

// Health check
app.get('/health', async (req, res) => {
    try {
        await db.query('SELECT 1');
        res.json({ status: 'ok', db: true });
    } catch (err) {
        console.error('❌ DB connection failed:', err);
        res.status(500).json({ status: 'fail', db: false });
    }
});

// GET all players (now using users table)
app.get('/admin/players', async (req, res) => {
    try {
        const [rows] = await db.query('SELECT id, username FROM users');
        res.json(rows);
    } catch (err) {
        console.error('❌ Error fetching players:', err);
        res.status(500).json({ message: 'Error fetching players' });
    }
});

// POST to add a new game
app.post('/admin/games', async (req, res) => {
    const { white_player_id, black_player_id, result } = req.body;

    if (!white_player_id || !black_player_id || !result) {
        return res.status(400).json({ message: 'Missing game data' });
    }

    // Validate that result is valid enum
    const allowedResults = ['1-0', '0-1', '½-½'];
    if (!allowedResults.includes(result)) {
        return res.status(400).json({ message: 'Invalid result format' });
    }

    try {
        const [resultData] = await db.query(
            `INSERT INTO games (white_player_id, black_player_id, result)
             VALUES (?, ?, ?)`,
            [white_player_id, black_player_id, result]
        );
        console.log('✅ New game added with ID:', resultData.insertId);
        res.json({ message: 'Game added', gameId: resultData.insertId });
    } catch (err) {
        console.error('❌ Error inserting game:', err);
        res.status(500).json({ message: 'Error adding game', error: err.message });
    }
});

app.get('/admin/games', async (req, res) => {
    try {
        const [rows] = await db.query(`
            SELECT g.id, 
                   g.white_player_id, wp.username AS white_player,
                   g.black_player_id, bp.username AS black_player,
                   g.result,
                   g.date_played
            FROM games g
            JOIN users wp ON g.white_player_id = wp.id
            JOIN users bp ON g.black_player_id = bp.id
            ORDER BY g.date_played DESC
        `);
        res.json(rows);
    } catch (err) {
        console.error('❌ Error fetching games:', err);
        res.status(500).json({ message: 'Error fetching games', error: err.message });
    }
});




// Start server
app.listen(PORT, () => {
    console.log(`🚀 Server running on http://localhost:${PORT}`);
});
